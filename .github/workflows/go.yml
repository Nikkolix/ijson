name: Release

permissions:
  contents: write

on:
  push:
    branches: ["**"]   # run on all branches
    paths-ignore:
      - 'CHANGELOG.md'
      - 'README.md'
  pull_request:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Download dependencies
        run: go mod tidy

      - name: Go Install
        run: |
          go install github.com/git-chglog/git-chglog/cmd/git-chglog@latest
          go install github.com/go-semantic-release/semantic-release/cmd/semantic-release@latest

      - name: Run Test
        run: |
            go test -v ./... -covermode=count -coverprofile=coverage.out
            go tool cover -func=coverage.out -o=coverage.out

      - name: Go Coverage Badge
        uses: tj-actions/coverage-badge-go@v3
        with:
          filename: coverage.out

      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v20
        id: verify-changed-files
        with:
          files: README.md

      - name: Generate Changelog
        run: |
          if git describe --tags > /dev/null 2>&1; then
            git-chglog -o CHANGELOG.md
          else
            echo "⚠️ No existing tags found, generating changelog for v0.1.0"
            git-chglog --next-tag v0.1.0 -o CHANGELOG.md
          fi

      - name: Commit changes
        if: steps.verify-changed-files.outputs.files_changed == 'true' || steps.changelog.outputs.changelog_generated == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git add CHANGELOG.md
          git commit -m "chore: Updated coverage badge."

      - name: Push changes
        if: steps.verify-changed-files.outputs.files_changed == 'true' || steps.changelog.outputs.changelog_generated == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ github.token }}
          branch: ${{ github.head_ref }}

      - name: Semantic Release
        run: |
          bash -c 'semantic-release github; CODE=$?; if [ $CODE -eq 65 ]; then echo "No release needed"; exit 0; else exit $CODE; fi'
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}